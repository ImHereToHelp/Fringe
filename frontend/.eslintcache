[{"C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\index.js":"1","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\App.js":"2","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Form.js":"3","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Content.js":"4","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\ThreadCard.js":"5","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Thread.js":"6","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Post.js":"7"},{"size":287,"mtime":1608327461090,"results":"8","hashOfConfig":"9"},{"size":782,"mtime":1612568525774,"results":"10","hashOfConfig":"9"},{"size":3579,"mtime":1612568493075,"results":"11","hashOfConfig":"9"},{"size":902,"mtime":1612568294875,"results":"12","hashOfConfig":"9"},{"size":1456,"mtime":1608404125124,"results":"13","hashOfConfig":"9"},{"size":1201,"mtime":1608407332495,"results":"14","hashOfConfig":"9"},{"size":2088,"mtime":1612569056895,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xkzpw1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\index.js",[],["36","37"],"C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\App.js",["38","39","40","41"],"import './App.css';\nimport Form from './components/Form';\nimport Content from './components/Content';\nimport { Grid, Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { Switch, Route } from 'react-router-dom';\nimport Thread from './components/Thread';\n\nconst useStyles = makeStyles({\n  divider: {\n    margin: \"30px 0px\"\n  }\n});\n\n\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h2\">Fringe</Typography>\n      <Typography variant=\"subtitle1\">Simple Image Board</Typography>\n      <Switch>\n        <Route exact path=\"/\"> <Content /> </Route>\n        <Route exact path=\"/:thread_id\"> <Thread/> </Route>\n      </Switch>\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Form.js",["42","43","44","45"],"import React, { useState } from 'react';\r\nimport { Grid, TextField,  Paper, Button, Divider } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"350px\",\r\n        margin: 'auto'\r\n    }\r\n    ,\r\n    button:{\r\n        width: '50px',\r\n    }\r\n    ,\r\n    input: {\r\n        // display: 'none'\r\n    }\r\n    ,\r\n    divider: {\r\n        margin: \"10px 0px\"\r\n      }\r\n});\r\n\r\nconst Form = () => {\r\n\r\n    const classes = useStyles();\r\n    const [name, setName] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [comment, setComment] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const pathName = document.location.pathname;\r\n    const image = document.getElementById(\"image-upload\");\r\n\r\n    const baseURL = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:5000/api\";\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if (comment.trim() === '') {\r\n            alert('Posts require a comment');\r\n            return;\r\n        }\r\n        if (image.files[0] !== undefined) {\r\n            const formData = new FormData();\r\n            formData.append(\"image\", image.files[0], \"test\");\r\n            const response = await axios.post(`${baseURL}/image-upload`, formData);\r\n            document.location.reload();\r\n            const response2 = await axios.post(`${baseURL}${pathName}`, {\r\n                name: name,\r\n                subject: subject,\r\n                comment: comment,\r\n                imageUrl: response.data.imageUrl\r\n            });\r\n        } else {\r\n            axios.post(`${baseURL}${pathName}`, {\r\n                name: name,\r\n                subject: subject,\r\n                comment: comment,\r\n                imageUrl: imageUrl\r\n        });\r\n            document.location.reload();\r\n        }\r\n    }\r\n\r\n    const showSubjectField = () => {\r\n        if (pathName === '/')\r\n            return (<TextField variant=\"outlined\" placeholder=\"Subject\" size=\"small\" fullWidth value={subject} onChange={e => setSubject(e.target.value)}></TextField>)\r\n        else\r\n            return <></>\r\n    };\r\n\r\n    return (\r\n       <> <Grid container direction=\"column\" alignItems=\"center\">\r\n            <form className=\"form-container\" onSubmit={e => handleSubmit(e)}>\r\n                <Grid item>\r\n                    <Paper className={classes.root} elevation={5}>\r\n                        <TextField variant=\"outlined\" placeholder=\"Name\" size=\"small\" fullWidth value={name} onChange={e => setName(e.target.value)}></TextField>\r\n                        {showSubjectField()}\r\n                        <TextField variant=\"outlined\" placeholder=\"Comment\" multiline rows={6} fullWidth value={comment} onChange={e => setComment(e.target.value)}></TextField> \r\n                    </Paper>    \r\n                </Grid>\r\n                    <Grid container item justify=\"space-between\">\r\n                        <input accept=\"image/*\" className={classes.input} id=\"image-upload\" type=\"file\" />\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}>Post</Button>\r\n                        \r\n                </Grid>\r\n            </form>\r\n            <Divider className={classes.divider} />\r\n        </Grid>\r\n        <Divider className={classes.divider} />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Content.js",[],"C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\ThreadCard.js",[],["46","47"],"C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Thread.js",["48"],"import React, {useState, useEffect} from 'react';\r\nimport Form from './Form';\r\nimport Post from './Post';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useStyles = makeStyles({\r\n    grid: {\r\n        marginBottom: \"50px\"\r\n    }\r\n});\r\n\r\nconst Thread = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const pathName = document.location.pathname;\r\n    const classes = useStyles();\r\n\r\n    const baseURL =\r\nprocess.env.NODE_ENV === \"production\"\r\n  ? \"/api\"\r\n  : \"http://localhost:5000/api\";\r\n\r\n    const getPosts = async () => {\r\n        const response = await axios.get(`${baseURL}${pathName}`);\r\n        const jsonData = await response.data;\r\n        setPosts(jsonData);\r\n    };\r\n\r\n    useEffect(() => getPosts(), []);\r\n    return (\r\n        <>\r\n            <Form />\r\n            <Grid className={classes.grid} container direction=\"column\" alignItems=\"flex-start\">\r\n            {posts.map(props => {\r\n                return (\r\n                    <Post key={props.reply_id} {...props}/>\r\n                )\r\n            })}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Thread\r\n","C:\\Users\\CTS91\\Desktop\\DansZone2.0\\frontend\\src\\components\\Post.js",["49","50"],"import React from 'react';\r\nimport { Grid, TextField, Paper, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst moment = require('moment');\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        backgroundColor: \"#d6daf0\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"5px\",\r\n        wordWrap: \"break-word\",\r\n        padding: \"10px\",\r\n        \r\n    }\r\n    ,\r\n    name: {\r\n        fontWeight: \"bold\",\r\n        color: \"#117743\",\r\n        marginBottom: \"5px\"\r\n    }\r\n    \r\n    ,\r\n    comment: {\r\n        marginLeft: \"15px\",\r\n    }\r\n    ,\r\n    commentContainer: {\r\n        // wordWrap: \"break-word\",\r\n        maxWidth: \"70vw\",\r\n    }\r\n    ,\r\n    postGrid: {\r\n        padding: \"0px 15px\"\r\n    }\r\n});\r\n\r\n\r\nconst Post = ({ reply_id, thread_id, name, subject, comment, post_date, is_thread, reply_count, image_url}) => {\r\n    const classes = useStyles();\r\n    const date = new Date(post_date.replace(' ', 'T'));\r\n\r\n    return (\r\n        <Grid item className={classes.postGrid}>\r\n            <Paper elevation={2} className={classes.paper}>\r\n                <Typography className={classes.name} display='inline'>{name === '' ? \"Anonymous\" : name}</Typography>\r\n                <Typography display='inline'>   {moment(date).format('llll')} EST </Typography>\r\n                <Typography display='inline'>No.{reply_id}</Typography>\r\n                <Grid item container wrap=\"nowrap\" >\r\n                    <Grid item>\r\n                        {\r\n                            image_url !== '' ? <a href={image_url}><img className={classes.image} src={image_url} width=\"200\" height=\"200\" alt=\"\"/></a> : <></>\r\n                        }\r\n                    </Grid>\r\n                    \r\n                    <Grid item nowrap className={classes.commentContainer}>\r\n                        <Typography  className={classes.comment} display='inline'>{comment}</Typography>\r\n                    </Grid>\r\n                     \r\n                </Grid>\r\n                \r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Post\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":14},{"ruleId":"55","severity":1,"message":"60","line":4,"column":28,"nodeType":"57","messageId":"58","endLine":4,"endColumn":35},{"ruleId":"55","severity":1,"message":"61","line":18,"column":9,"nodeType":"57","messageId":"58","endLine":18,"endColumn":16},{"ruleId":"55","severity":1,"message":"62","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":18},{"ruleId":"55","severity":1,"message":"63","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":19},{"ruleId":"55","severity":1,"message":"64","line":34,"column":22,"nodeType":"57","messageId":"58","endLine":34,"endColumn":33},{"ruleId":"55","severity":1,"message":"65","line":51,"column":19,"nodeType":"57","messageId":"58","endLine":51,"endColumn":28},{"ruleId":"51","replacedBy":"66"},{"ruleId":"53","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":32,"column":33,"nodeType":"70","endLine":32,"endColumn":35,"suggestions":"71"},{"ruleId":"55","severity":1,"message":"72","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":25},{"ruleId":"55","severity":1,"message":"73","line":2,"column":34,"nodeType":"57","messageId":"58","endLine":2,"endColumn":40},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","'setImageUrl' is assigned a value but never used.","'response2' is assigned a value but never used.",["74"],["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'TextField' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [getPosts]",{"range":"79","text":"80"},[822,824],"[getPosts]"]